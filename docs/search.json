[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Team Datatepe",
    "section": "",
    "text": "This is our project webpage.\nPlease stay tuned to follow our project activities.\n\nTeam Members\n\nYiğit Türkel\nFiruze İpek Yıldırım\nMuhammed Uğur Çubuk\nElif Lorasdağı\nHazan Fakılı\nTutku Altay\n\n\n\nProject Topic\nComprehensive Analysis of Hacettepe University Engineering Faculty (2018-2024)\nThis project focuses on a detailed analysis of the admissions and demographic trends in the Engineering Faculty of Hacettepe University over the period from 2018 to 2024. The analysis covers several key parameters: capasities, valedictorians, gender distribution, the geographical regions from which students originate, and the number of national preferences for the faculty. By examining these aspects, the project aims to highlight shifts in student demographics, changes in gender representation, regional diversity, and the popularity of the faculty across Turkey. The findings will provide valuable insights into the evolution of admission policies and the factors influencing student choices during this period.\n\n\nData Set\n1\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Analysis",
    "section": "",
<<<<<<< HEAD
    "text": "This page consists of analysis and key points about Hacettepe University Engineering Faculity datas between 2018-2024\n\n\nCode\n# Load necessary libraries\n# Gerekli kütüphaneleri yükle\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(scales) # Logaritmik dönüşüm için\n\n# Veriyi yükle\ndata &lt;- read_csv(\"ya_veri.csv\")\n\n# Veriyi filtrele ve sıralama bilgilerini numeric olarak düzenle\ndata_filtered &lt;- data %&gt;%\n  select(department, year, ranking) %&gt;%\n  filter(!is.na(ranking)) %&gt;%\n  mutate(ranking = as.numeric(ranking))\n\n\nggplot(data=data_filtered, aes(x=year, y=ranking, color=department, group=department)) +\n  geom_line(linewidth=0.6) +  # Thinner lines\n  geom_point(size=1.2) +  # Smaller points\n  scale_y_log10(\n    name=\"Ranking (Base 3 Log, Inverted)\",\n    trans = log_trans(base = 3),  # Base 3 logarithmic scale\n    breaks = c(900, 2700, 8100, 24300, 72900, 218700),  # Base-3 scaled values\n    labels = c(\"900\", \"2.7k\", \"8.1k\", \"24.3k\", \"72.9k\", \"218.7k\")  # Formatted labels\n  ) +\n  coord_cartesian(ylim = rev(range(data_filtered$ranking))) +  # Invert y-axis (upside down)\n  scale_color_manual(\n    values = c(\n      \"Chemical_Eng\" = \"#f70753\", \n      \"Mining_Eng\" = \"#f707eb\", \n      \"Geology_Eng\" = \"#450015\", \n      \"Geomatic_Eng\" = \"#a89200\", \n      \"Enviromental_Eng\" = \"#00a80e\", \n      \"Industrial_Eng\" = \"#004506\", \n      \"AI_Eng\" = \"#333333\", \n      \"Hydrogeology_Eng\" = \"#102457\", \n      \"Physics_Eng\" = \"#0047fa\", \n      \"Computer_Eng\" = \"#fa4700\", \n      \"Mechanical_Eng\" = \"#912fed\", \n      \"Electrical_Electronic_Eng\" = \"#031a73\", \n      \"Food_Eng\" = \"#5778ff\", \n      \"Civil_Eng\" = \"#ff57e9\", \n      \"Nuclear_Energy_Eng\" = \"#149e08\",\n      \"Other\" = \"#c2501b\"  # Default color for additional departments\n    )\n  ) +\n  labs(\n    title=\"Department Rankings Over the Years (Base 3 Logarithmic Scale, Inverted Y-Axis)\",\n    x=\"Years\",\n    y=\"Ranking\"\n  ) +\n  theme_minimal(base_size = 10) +  # Compact theme\n  theme(\n    legend.position=\"bottom\",  # Legend below the graph\n    legend.title=element_text(size=8),  # Smaller legend title\n    legend.text=element_text(size=6),  # Smaller legend labels\n    legend.key.size=unit(0.4, \"cm\"),  # Smaller legend keys\n    legend.box = \"horizontal\",  # Horizontal legend layout\n    legend.spacing.x = unit(0.1, \"cm\"),  # Reduce legend spacing\n    axis.text.x=element_text(size=8, angle=45, hjust=1),  # Smaller x-axis labels\n    axis.text.y=element_text(size=8),  # Smaller y-axis labels\n    axis.title=element_text(size=9),  # Smaller axis titles\n    plot.title=element_text(size=12, face=\"bold\", hjust=0.5),  # Compact title\n    plot.margin = margin(5, 5, 5, 5)  # Reduce plot margins\n  ) +\n  scale_x_continuous(breaks = unique(data_filtered$year))  # Ensure all years are shown\n\n\n\n\n\n\n\n\n\n\nAnalysis of the Graph\nThe graph illustrates the annual ranking changes for various engineering departments using an inverted base-3 logarithmic scale on the y-axis. This allows for better visualization of differences in rankings, especially when the values span a large range.\n\n\nKey Observations\n\n1. Ranking Scale and Inverted Axis\n\nThe y-axis represents the rankings in an inverted order, meaning lower values (e.g., 900) are at the top, representing better rankings, while higher values (e.g., 218,700) are at the bottom.\nThe logarithmic scale (base 3) compresses large ranking ranges, making differences at higher ranks more visible.\n\n\n\n2. Trends Across Departments\n\nDepartments such as Computer_Eng, Electrical_Electronic_Eng, and Mechanical_Eng consistently maintain strong rankings (closer to the top).\nSome departments, such as Geology_Eng and Hydrogeology_Eng, exhibit more volatile or declining trends, with rankings fluctuating significantly across years.\n\n\n\n3. Departments with Notable Improvements\n\nAI_Eng: Shows consistent improvement over the years, likely reflecting the growing demand for AI-related skills.\nEnvironmental_Eng: Gradual improvement in rankings, potentially tied to increased focus on sustainability and environmental concerns.\n\n\n\n4. Departments with Declining or Stable Trends\n\nMining_Eng and Nuclear_Energy_Eng show a downward trend or stagnation, possibly due to reduced student interest or demand in these fields.\nGeomatic_Eng: Rankings remain stable, with minor fluctuations year to year.\n\n\n\n\nPoints to Highlight\n\nHigh-Performing Departments:\n\nComputer_Eng and Electrical_Electronic_Eng dominate in rankings, consistently outperforming other departments. This could be tied to their relevance in high-demand industries such as technology and electronics.\n\nEmerging Trends:\n\nFields like AI_Eng and Environmental_Eng show positive momentum, reflecting their growing importance in modern industries.\n\nFields Facing Challenges:\n\nTraditional disciplines like Mining_Eng and Hydrogeology_Eng appear to struggle with maintaining their rankings, which may signal declining interest or resource constraints.\n\nImpact of Logarithmic Scale:\n\nThe base-3 logarithmic transformation helps visualize smaller differences in rankings at lower ranks while compressing larger differences at higher ranks.\n\n\n\n\nInsights and Recommendations\n\nImproving Low-Performing Departments:\n\nStrategies could be developed to enhance the appeal and competitiveness of fields like Mining_Eng and Nuclear_Energy_Eng, possibly through curriculum updates or emphasizing interdisciplinary applications.\n\nSustaining High Performers:\n\nDepartments like Computer_Eng and Electrical_Electronic_Eng should continue leveraging their strong market relevance to attract top talent and improve further.\n\nMonitoring Trends:\n\nRising fields like AI_Eng and Environmental_Eng should be closely monitored for potential resource allocation and strategic focus to capitalize on their upward trends.\n\n\n\n\n\n\n Back to top"
=======
    "text": "About this site\n\n\nCode\n# Load necessary libraries\n# Gerekli kütüphaneleri yükle\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(scales) # Logaritmik dönüşüm için\n\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\nCode\n# Veriyi yükle\ndata &lt;- read_csv(\"ya_veri.csv\")\n\n\nRows: 105 Columns: 15\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): department\ndbl (14): year, capacity, percentage_women, percentage_men, valedictorian, r...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# Veriyi filtrele ve sıralama bilgilerini numeric olarak düzenle\ndata_filtered &lt;- data %&gt;%\n  select(department, year, ranking) %&gt;%\n  filter(!is.na(ranking)) %&gt;%\n  mutate(ranking = as.numeric(ranking))\n\n\nggplot(data=data_filtered, aes(x=year, y=ranking, color=department, group=department)) +\n  geom_line(linewidth=0.6) +  # Thinner lines\n  geom_point(size=1.2) +  # Smaller points\n  scale_y_log10(\n    name=\"Ranking (Base 3 Log, Inverted)\",\n    trans = log_trans(base = 3),  # Base 3 logarithmic scale\n    breaks = c(900, 2700, 8100, 24300, 72900, 218700),  # Base-3 scaled values\n    labels = c(\"900\", \"2.7k\", \"8.1k\", \"24.3k\", \"72.9k\", \"218.7k\")  # Formatted labels\n  ) +\n  coord_cartesian(ylim = rev(range(data_filtered$ranking))) +  # Invert y-axis (upside down)\n  scale_color_manual(\n    values = c(\n      \"Chemical_Eng\" = \"#f70753\", \n      \"Mining_Eng\" = \"#f707eb\", \n      \"Geology_Eng\" = \"#450015\", \n      \"Geomatic_Eng\" = \"#a89200\", \n      \"Enviromental_Eng\" = \"#00a80e\", \n      \"Industrial_Eng\" = \"#004506\", \n      \"AI_Eng\" = \"#333333\", \n      \"Hydrogeology_Eng\" = \"#102457\", \n      \"Physics_Eng\" = \"#0047fa\", \n      \"Computer_Eng\" = \"#fa4700\", \n      \"Mechanical_Eng\" = \"#912fed\", \n      \"Electrical_Electronic_Eng\" = \"#031a73\", \n      \"Food_Eng\" = \"#5778ff\", \n      \"Civil_Eng\" = \"#ff57e9\", \n      \"Nuclear_Energy_Eng\" = \"#149e08\",\n      \"Other\" = \"#c2501b\"  # Default color for additional departments\n    )\n  ) +\n  labs(\n    title=\"Department Rankings Over the Years (Base 3 Logarithmic Scale, Inverted Y-Axis)\",\n    x=\"Years\",\n    y=\"Ranking\"\n  ) +\n  theme_minimal(base_size = 10) +  # Compact theme\n  theme(\n    legend.position=\"bottom\",  # Legend below the graph\n    legend.title=element_text(size=8),  # Smaller legend title\n    legend.text=element_text(size=6),  # Smaller legend labels\n    legend.key.size=unit(0.4, \"cm\"),  # Smaller legend keys\n    legend.box = \"horizontal\",  # Horizontal legend layout\n    legend.spacing.x = unit(0.1, \"cm\"),  # Reduce legend spacing\n    axis.text.x=element_text(size=8, angle=45, hjust=1),  # Smaller x-axis labels\n    axis.text.y=element_text(size=8),  # Smaller y-axis labels\n    axis.title=element_text(size=9),  # Smaller axis titles\n    plot.title=element_text(size=12, face=\"bold\", hjust=0.5),  # Compact title\n    plot.margin = margin(5, 5, 5, 5)  # Reduce plot margins\n  ) +\n  scale_x_continuous(breaks = unique(data_filtered$year))  # Ensure all years are shown\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Gerekli kütüphaneleri yükle\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(scales) # Logaritmik dönüşüm için\n\n# Veriyi yükle\ndata &lt;- read_csv(\"ya_veri.csv\")\n\n\nRows: 105 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): department\ndbl (14): year, capacity, percentage_women, percentage_men, valedictorian, r...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# Veriyi filtrele ve sıralama bilgilerini numeric olarak düzenle\ndata_filtered &lt;- data %&gt;%\n  select(department, year, ranking) %&gt;%\n  filter(!is.na(ranking)) %&gt;%\n  mutate(ranking = as.numeric(ranking))\n\n\nggplot(data=data, aes(x=year, y=number_of_applications, color=department, group=department)) +\n  geom_line(linewidth=0.6) +  # Thinner lines\n  geom_point(size=1.2) +  # Smaller points\n  scale_y_continuous(\n    name=\"Number of Applications (Base 2 Log)\",\n    trans = log_trans(base = 2),  # Base-2 logarithmic scale\n    breaks = c(50, 100, 200, 400, 800, 1600, 3200, 6400, 9792),  # Add 9792 to the breaks\n    labels = c(\"50\", \"100\", \"200\", \"400\", \"800\", \"1.6k\", \"3.2k\", \"6.4k\", \"9.8k\")  # Formatted labels\n  ) +\n  scale_color_manual(\n    values = c(\n      \"Chemical_Eng\" = \"#f70753\", \n      \"Mining_Eng\" = \"#f707eb\", \n      \"Geology_Eng\" = \"#450015\", \n      \"Geomatic_Eng\" = \"#a89200\", \n      \"Enviromental_Eng\" = \"#00a80e\", \n      \"Industrial_Eng\" = \"#004506\", \n      \"AI_Eng\" = \"#333333\", \n      \"Hydrogeology_Eng\" = \"#102457\", \n      \"Physics_Eng\" = \"#0047fa\", \n      \"Computer_Eng\" = \"#fa4700\", \n      \"Mechanical_Eng\" = \"#912fed\", \n      \"Electrical_Electronic_Eng\" = \"#031a73\", \n      \"Food_Eng\" = \"#5778ff\", \n      \"Civil_Eng\" = \"#ff57e9\", \n      \"Nuclear_Energy_Eng\" = \"#149e08\",\n      \"Other\" = \"#c2501b\"  # Default color for additional departments\n    )\n  ) +\n  labs(\n    title=\"Department Applications Over the Years (Base 2 Logarithmic Scale)\",\n    x=\"Years\",\n    y=\"Number of Applications\"\n  ) +\n  theme_minimal(base_size = 10) +  # Compact theme\n  theme(\n    legend.position=\"bottom\",  # Legend below the graph\n    legend.title=element_text(size=8),  # Smaller legend title\n    legend.text=element_text(size=6),  # Smaller legend labels\n    legend.key.size=unit(0.4, \"cm\"),  # Smaller legend keys\n    legend.box = \"horizontal\",  # Horizontal legend layout\n    legend.spacing.x = unit(0.1, \"cm\"),  # Reduce legend spacing\n    axis.text.x=element_text(size=8, angle=45, hjust=1),  # Smaller x-axis labels\n    axis.text.y=element_text(size=8),  # Smaller y-axis labels\n    axis.title=element_text(size=9),  # Smaller axis titles\n    plot.title=element_text(size=12, face=\"bold\", hjust=0.5),  # Compact title\n    plot.margin = margin(5, 5, 5, 5)  # Reduce plot margins\n  ) +\n  scale_x_continuous(breaks = unique(data$year))  # Ensure all years are shown\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(readr)\nlibrary(dplyr)\n\n# Load the dataset\ndata &lt;- read_csv(\"ya_veri.csv\")\n\n\nRows: 105 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): department\ndbl (14): year, capacity, percentage_women, percentage_men, valedictorian, r...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# Plot with separate facets for each department and custom colors\nggplot(data=data, aes(x=year, y=number_of_applications, group=department, color=department)) +\n  geom_line(linewidth=0.6) +  # Custom colored lines\n  geom_point(size=1.2) +  # Custom colored points\n  facet_wrap(~department, scales=\"free_y\") +  # Create separate plots for each department\n  scale_color_manual(\n    values = c(\n      \"Chemical_Eng\" = \"#f70753\", \n      \"Mining_Eng\" = \"#f707eb\", \n      \"Geology_Eng\" = \"#450015\", \n      \"Geomatic_Eng\" = \"#a89200\", \n      \"Enviromental_Eng\" = \"#00a80e\", \n      \"Industrial_Eng\" = \"#004506\", \n      \"AI_Eng\" = \"#333333\", \n      \"Hydrogeology_Eng\" = \"#102457\", \n      \"Physics_Eng\" = \"#0047fa\", \n      \"Computer_Eng\" = \"#fa4700\", \n      \"Mechanical_Eng\" = \"#912fed\", \n      \"Electrical_Electronic_Eng\" = \"#031a73\", \n      \"Food_Eng\" = \"#5778ff\", \n      \"Civil_Eng\" = \"#ff57e9\", \n      \"Nuclear_Energy_Eng\" = \"#149e08\",\n      \"Other\" = \"#c2501b\"  # Default color for additional departments\n    )\n  ) +\n  labs(\n    title=\"Number of Applications by Department\",\n    x=\"Year\",\n    y=\"Number of Applications\"\n  ) +\n  theme_minimal(base_size = 10) +  # Compact layout\n  theme(\n    strip.text=element_text(size=8, face=\"bold\"),  # Bold department labels\n    axis.text.x=element_text(size=8, angle=45, hjust=1),  # Smaller x-axis labels\n    axis.text.y=element_text(size=8),  # Smaller y-axis labels\n    axis.title=element_text(size=9),  # Smaller axis titles\n    plot.title=element_text(size=12, face=\"bold\", hjust=0.5),  # Compact title\n    plot.margin = margin(5, 5, 5, 5),  # Reduce plot margins\n    legend.position=\"none\"  # Remove legend for better facet display\n  ) +\n  scale_x_continuous(breaks = unique(data$year))  # Ensure all years are shown\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
>>>>>>> 8fd39460ec9e28ca9e3130ca8208364574ddea21
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Your Title",
    "section": "",
    "text": "Code\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\n\n# Load the dataset\ndata &lt;- read_csv(\"ya_veri.csv\")\n\n# Filter out 2018 data\ndata &lt;- filter(data, year != 2018)\n\n# Function to plot gender distribution\nplot_gender_distribution &lt;- function(department_name) {\n  department_data &lt;- filter(data, department == department_name)\n  \n  # Define y-axis limits based on department\n  y_limits &lt;- if (department_name == \"Computer_Eng\") {\n    c(0, 140)\n  } else {\n    c(0, 110)\n  }\n  \n  ggplot(department_data) +\n    geom_bar(aes(x = factor(year), y = capacity, fill = \"Men\"), stat = \"identity\", position = \"stack\") +\n    geom_bar(aes(x = factor(year), y = capacity * (percentage_women / 100), fill = \"Women\"), stat = \"identity\", position = \"stack\") +\n    geom_line(aes(x = factor(year), y = valedictorian * 11, group = 1), color = \"purple\", linewidth = 0.75) +\n    geom_point(aes(x = factor(year), y = valedictorian * 11), color = \"purple\", size = 2) +\n    geom_text(aes(x = factor(year), y = capacity, label = paste0(percentage_men, \"%\")), \n              vjust = -0.5, color = \"pink\", size = 3, fontface = \"bold\") +\n    geom_text(aes(x = factor(year), y = capacity * (percentage_women / 100), label = paste0(percentage_women, \"%\")), \n              vjust = 1.5, color = \"navy\", size = 3, fontface = \"bold\") +\n    geom_text(aes(x = factor(year), y = valedictorian * 11, label = valedictorian), \n              color = \"purple\", size = 3, fontface = \"bold\", vjust = -1.5, hjust = 0.5) +\n    scale_y_continuous(name = \"Capacity\", limits = y_limits, breaks = seq(y_limits[1], y_limits[2], by = 10),\n                       sec.axis = sec_axis(~ . / 11, name = \"Valedictorians\", breaks = seq(1, 10, by = 1))) +\n    labs(title = department_name, x = \"Year\", fill = \"Gender\") +\n    scale_fill_manual(values = c(\"Women\" = \"pink\", \"Men\" = \"navy\")) +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 12),\n          axis.text.x = element_text(angle = 45, hjust = 1, size = 10),\n          axis.text.y = element_text(size = 10),\n          axis.text.y.right = element_text(color = \"purple\", size = 10),\n          axis.title.y.right = element_text(color = \"purple\", size = 12))\n}\n\n# List of departments\ndepartments &lt;- unique(data$department)\n\n# Create and print plots in a single column\nfor (dept in departments) {\n  print(plot_gender_distribution(dept))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrief Overview\nThe graph visualizes annual data for each department, showing:\n\nTotal student capacity,\nGender distribution (women and men percentages),\nValedictorian (top student) numbers.\n\nThere is a general trend of increasing female student ratios over the years, while valedictorian numbers remain relatively low compared to total capacity.\n\nKey Points to Highlight\n\n1. Changes in Gender Distribution\n\nIncrease in Female Student Ratios:\nMost departments show a steady increase in female student ratios over the years. For example, in Chemical_Eng, the female ratio increased from 63.4% in 2019 to 68.3% in 2022.\nDecline in Male Student Ratios:\nCorresponding to the rise in female ratios, male student ratios show a decrease across most departments.\n\n\n\n2. Valedictorian Trends\n\nValedictorian numbers are consistent in some departments, such as Computer_Eng, but show significant fluctuations in others, such as Chemical_Eng.\nExamples:\n\nChemical_Eng: Valedictorian count dropped from 3 in 2019 to 2 in 2020 and remained stable afterward.\nComputer_Eng: A noticeable increase in valedictorian numbers in 2022 compared to previous years.\n\n\n\n\n3. Fluctuations in Total Capacity\n\nExample:\nChemical_Eng had a stable capacity from 2018 to 2021 (82 students) but experienced a 12.2% decrease in 2022 (down to 72 students).\nSome departments maintain a steady capacity, while others fluctuate significantly.\n\n\n\n4. Notable Differences Between Departments\n\nComputer_Eng:\n\nHas a higher y-axis limit (140), reflecting a larger student intake compared to other departments.\nShows more consistent trends in valedictorian numbers and gender ratios.\n\nChemical_Eng:\n\nExhibits a relatively higher female student ratio compared to other departments.\nShows a decline in total capacity over the years.\n\n\n\n\n\nInsights and Recommendations\n\nIncrease in Female Student Ratios:\nThe rising female student ratios indicate either improved educational policies or growing interest among female students in these departments.\nValedictorian Numbers vs. Capacity:\nThe low valedictorian numbers relative to total capacity suggest the need for further performance analysis and academic support in specific departments.\nCapacity Variations Between Departments:\nDepartments like Computer_Eng accommodate larger student intakes while maintaining stable valedictorian numbers, which can be studied as a model for scalability.\n\n\n\n\n\n\n\n\n Back to top"
  }
]